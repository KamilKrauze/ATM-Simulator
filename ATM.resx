<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        tqAAAAAASUVORK5CYII=
</value>
  </data>
</root>